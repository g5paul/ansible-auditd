---

- block:
## https://github.com/lxc/lxd/issues/2004, only on xenial?
    - name: ensure auditd package is present
      package: name={{ auditd_pkg }} state=present update_cache=yes

    - name: ensure audisp package is present
      package: name={{ audispd_pkg }} state=present update_cache=yes

    - name: retrieve suid/sgid files list
      command: find / -perm /u=s,g=s -type f
      register: sugid_files
      ignore_errors: true
      changed_when: false

    - name: configure audit system
      template:
        src: "{{ item }}.rules.j2"
        dest: "{{ auditd_confdir }}/{{ item }}.rules"
        mode: '0644'
        backup: yes
      with_items: "{{ auditd_rules_templates }}"
      notify:
        - augenrules - debian
        - restart auditd
        - restart auditd - rhel7
      ignore_errors: "{{ ansible_check_mode }}"

    - name: auditd and audisp Config files
      template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: '0640'
      with_items:
        - { src: 'auditd.conf.j2',        dest: '{{ auditd_home }}/auditd.conf' }
        - { src: 'audisp-syslog.conf.j2', dest: '{{ auditd_disp_home }}/plugins.d/syslog.conf' }
      notify:
        - restart auditd

## FIXME! trusty? FAILED! => {"changed": true, "exit_status": 1, "failed": true,
##      "msg": "failed to validate", "stderr":
##       "Error - /home/deploy/.ansible/tmp/ansible-tmp-1490366414.92-30368643815826/source isn't owned by root\n",
##       "stdout": "", "stdout_lines": []}
#    - name: configure audit system
#      #template: src=audit.rules.j2 dest=/etc/audit/audit.rules mode=0644 backup=yes validate='auditctl -R %s'
#      template:
#        src: audit.rules.j2
#        dest: "{{ auditd_confdir }}/audit.rules"
#        mode: '0644'
#        backup: yes
#        #validate='auditctl -R %s'
#      notify:
#        - restart auditd
#        - restart auditd - rhel7
#      register: auditdrules
#
#    - name: validate auditd rules
#      command: "auditctl -R {{ auditd_confdir }}/audit.rules"
#      environment:
#        PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
#      when: auditdrules.changed

    - name: Check if grub is present
      stat: path=/etc/default/grub
      register: hasgrub
    - block:
        - name: check if auditing present in grub config
          command: "egrep '^GRUB_CMDLINE_LINUX=\".*audit=1.*\"' /etc/default/grub"
          changed_when: false
          register: auditgrub
          ignore_errors: true
        - name: Enable Auditing in grub for Processes That Start Prior to auditd - CIS
          replace: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX="(.*)"' replace='GRUB_CMDLINE_LINUX="\1 audit=1"'
          when: not auditgrub.stdout
          ignore_errors: "{{ ansible_check_mode }}"
      when: hasgrub.stat is defined and hasgrub.stat.exists
    - name: Enable and start auditd
      service: name=auditd state=started enabled=yes
    - name: Set fact for monit
      set_fact:
        monit_auditd: true
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        ) and not osquery_process_auditing
  tags: auditd

- block:
    - name: Disable auditd as osquery present with process auditing configured
      service: name=auditd state=stopped enabled=no
    - name: Set fact for monit
      set_fact:
        monit_auditd: false
  when: osquery_process_auditing

- include: logrotate.yml
